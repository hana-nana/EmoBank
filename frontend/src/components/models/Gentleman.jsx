/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 gentleman.glb 
*/

import { useRef,useEffect,useState,useContext } from 'react'
import { useGLTF, useAnimations,Outlines } from '@react-three/drei'
import { GlobalContext } from '../../App'
import { UseAnimatedText } from '../common/hooks/UseAnimatedText';
import { TextBoard } from '../common/hooks/TextBoard';
import { useFrame } from '@react-three/fiber';

const text = "여기는 저축창구 입니다. ";

export function Gentleman(props) {
  const group = useRef()
  const chatRef = useRef(null);
  const {displayText} = UseAnimatedText(text);
  const { nodes, materials, animations } = useGLTF('/resources/gentleman.glb')
  const { actions } = useAnimations(animations, group)

  const [isOutlined, setIsOutlined] = useState(false)
  const {zoomed}= useContext(GlobalContext)
 
  useEffect(() => {

    actions.idle.play();
    const near=props.isNear
    
    if(near==="deposit" && zoomed===false){
      setIsOutlined(true);
      
      chatRef.current.position.set(
        group.current.position.x - 1.3,
        group.current.position.y + 4.3,
        group.current.position.z - 2,
      )
    }
    else if(near==="deposit" && zoomed===true){
      setIsOutlined(false)
      actions.gesture?.reset().play()
    }
    else{
      setIsOutlined(false)
      actions.idle?.play()
      chatRef.current.position.set()
    }
  });

  useFrame(() => {
    if(!chatRef.current) return;
    chatRef.current.lookAt(10000, 10000, 10000);
  })
  return (
    <>
    <TextBoard ref={chatRef} text={displayText} />
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature001" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.mixamorigHips} />
          <skinnedMesh name="back001" geometry={nodes.back001.geometry} material={materials['Material.012']} skeleton={nodes.back001.skeleton} />
          <skinnedMesh name="body002" geometry={nodes.body002.geometry} material={materials['Material.015']} skeleton={nodes.body002.skeleton}>
          {isOutlined  &&<Outlines angle={0} thickness={200} color="yellow" />}
          </skinnedMesh>
          <skinnedMesh name="body003" geometry={nodes.body003.geometry} material={materials['Material.016']} skeleton={nodes.body003.skeleton} />
          <skinnedMesh name="bowtie001" geometry={nodes.bowtie001.geometry} material={materials['Material.026']} skeleton={nodes.bowtie001.skeleton} />
          <skinnedMesh name="coat001" geometry={nodes.coat001.geometry} material={materials['Material.012']} skeleton={nodes.coat001.skeleton} />
          <skinnedMesh name="eyebrow1001" geometry={nodes.eyebrow1001.geometry} material={materials['Material.028']} skeleton={nodes.eyebrow1001.skeleton} />
          <skinnedMesh name="eyebrow2001" geometry={nodes.eyebrow2001.geometry} material={materials['Material.028']} skeleton={nodes.eyebrow2001.skeleton} />
          <skinnedMesh name="groin001" geometry={nodes.groin001.geometry} material={materials['Material.018']} skeleton={nodes.groin001.skeleton} />
          <skinnedMesh name="hair001" geometry={nodes.hair001.geometry} material={materials['Material.027']} skeleton={nodes.hair001.skeleton} />
          <skinnedMesh name="left001" geometry={nodes.left001.geometry} material={materials['Material.019']} skeleton={nodes.left001.skeleton} />
          <skinnedMesh name="left_center001" geometry={nodes.left_center001.geometry} material={materials['Material.020']} skeleton={nodes.left_center001.skeleton} />
          <skinnedMesh name="left_leg001" geometry={nodes.left_leg001.geometry} material={materials['Material.018']} skeleton={nodes.left_leg001.skeleton} />
          <skinnedMesh name="monocle001" geometry={nodes.monocle001.geometry} material={materials['Material.024']} skeleton={nodes.monocle001.skeleton} />
          <skinnedMesh name="monocleline001" geometry={nodes.monocleline001.geometry} material={materials['Material.025']} skeleton={nodes.monocleline001.skeleton} />
          <skinnedMesh name="mustache001" geometry={nodes.mustache001.geometry} material={materials['Material.023']} skeleton={nodes.mustache001.skeleton} />
          <skinnedMesh name="right001" geometry={nodes.right001.geometry} material={materials['Material.019']} skeleton={nodes.right001.skeleton} />
          <skinnedMesh name="right_center001" geometry={nodes.right_center001.geometry} material={materials['Material.020']} skeleton={nodes.right_center001.skeleton} />
          <skinnedMesh name="shirt001" geometry={nodes.shirt001.geometry} material={materials['Material.021']} skeleton={nodes.shirt001.skeleton} />
          <skinnedMesh name="shoe_left001" geometry={nodes.shoe_left001.geometry} material={materials['Material.022']} skeleton={nodes.shoe_left001.skeleton} />
          <skinnedMesh name="실린더001" geometry={nodes.실린더001.geometry} material={materials['Material.012']} skeleton={nodes.실린더001.skeleton} />
        </group>
      </group>
    </group>
    </>
  )
}
export default Gentleman;
useGLTF.preload('/gentleman.glb')
